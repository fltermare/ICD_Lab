   0  $accept : program $end

   1  $$1 :

   2  program : ID MK_SEMICOLON $$1 program_body END ID

   3  program_body : opt_decl_list opt_func_decl_list compound_stmt

   4  $$2 :

   5  opt_decl_list : $$2 decl_list
   6                |

   7  decl_list : decl_list decl
   8            | decl

   9  decl : VAR id_list MK_COLON scalar_type MK_SEMICOLON
  10       | VAR id_list MK_COLON array_type MK_SEMICOLON
  11       | VAR id_list MK_COLON literal_const MK_SEMICOLON

  12  int_const : INT_CONST
  13            | OCTAL_CONST

  14  literal_const : int_const
  15                | OP_SUB int_const
  16                | FLOAT_CONST
  17                | OP_SUB FLOAT_CONST
  18                | SCIENTIFIC
  19                | OP_SUB SCIENTIFIC
  20                | STR_CONST
  21                | TRUE
  22                | FALSE

  23  opt_func_decl_list : func_decl_list
  24                     |

  25  func_decl_list : func_decl_list func_decl
  26                 | func_decl

  27  $$3 :

  28  $$4 :

  29  $$5 :

  30  func_decl : ID MK_LPAREN $$3 opt_param_list $$4 MK_RPAREN opt_type MK_SEMICOLON $$5 compound_stmt END ID

  31  opt_param_list : param_list
  32                 |

  33  param_list : param_list MK_SEMICOLON param
  34             | param

  35  $$6 :

  36  param : $$6 id_list MK_COLON type

  37  id_list : id_list MK_COMMA ID
  38          | ID

  39  opt_type : MK_COLON type
  40           |

  41  type : scalar_type
  42       | array_type

  43  scalar_type : INTEGER
  44              | REAL
  45              | BOOLEAN
  46              | STRING

  47  $$7 :

  48  $$8 :

  49  $$9 :

  50  array_type : $$7 ARRAY int_const $$8 TO int_const OF $$9 type

  51  stmt : compound_stmt
  52       | simple_stmt
  53       | cond_stmt
  54       | while_stmt
  55       | for_stmt
  56       | return_stmt
  57       | proc_call_stmt

  58  $$10 :

  59  compound_stmt : BEG $$10 opt_decl_list opt_stmt_list END

  60  opt_stmt_list : stmt_list
  61                |

  62  stmt_list : stmt_list stmt
  63            | stmt

  64  simple_stmt : var_ref OP_ASSIGN boolean_expr MK_SEMICOLON
  65              | PRINT boolean_expr MK_SEMICOLON
  66              | READ boolean_expr MK_SEMICOLON

  67  proc_call_stmt : ID MK_LPAREN opt_boolean_expr_list MK_RPAREN MK_SEMICOLON

  68  cond_stmt : IF boolean_expr THEN opt_stmt_list ELSE opt_stmt_list END IF
  69            | IF boolean_expr THEN opt_stmt_list END IF

  70  while_stmt : WHILE boolean_expr DO opt_stmt_list END DO

  71  for_stmt : FOR ID OP_ASSIGN int_const TO int_const DO opt_stmt_list END DO

  72  return_stmt : RETURN boolean_expr MK_SEMICOLON

  73  opt_boolean_expr_list : boolean_expr_list
  74                        |

  75  boolean_expr_list : boolean_expr_list MK_COMMA boolean_expr
  76                    | boolean_expr

  77  boolean_expr : boolean_expr OP_OR boolean_term
  78               | boolean_term

  79  boolean_term : boolean_term OP_AND boolean_factor
  80               | boolean_factor

  81  boolean_factor : OP_NOT boolean_factor
  82                 | relop_expr

  83  relop_expr : expr rel_op expr
  84             | expr

  85  rel_op : OP_LT
  86         | OP_LE
  87         | OP_EQ
  88         | OP_GE
  89         | OP_GT
  90         | OP_NE

  91  expr : expr add_op term
  92       | term

  93  add_op : OP_ADD
  94         | OP_SUB

  95  term : term mul_op factor
  96       | factor

  97  mul_op : OP_MUL
  98         | OP_DIV
  99         | OP_MOD

 100  factor : var_ref
 101         | OP_SUB var_ref
 102         | MK_LPAREN boolean_expr MK_RPAREN
 103         | OP_SUB MK_LPAREN boolean_expr MK_RPAREN
 104         | ID MK_LPAREN opt_boolean_expr_list MK_RPAREN
 105         | OP_SUB ID MK_LPAREN opt_boolean_expr_list MK_RPAREN
 106         | literal_const

 107  var_ref : ID
 108          | var_ref dim

 109  dim : MK_LB boolean_expr MK_RB

state 0
	$accept : . program $end  (0)

	ID  shift 1
	.  error

	program  goto 2


state 1
	program : ID . MK_SEMICOLON $$1 program_body END ID  (2)

	MK_SEMICOLON  shift 3
	.  error


state 2
	$accept : program . $end  (0)

	$end  accept


state 3
	program : ID MK_SEMICOLON . $$1 program_body END ID  (2)
	$$1 : .  (1)

	.  reduce 1

	$$1  goto 4


state 4
	program : ID MK_SEMICOLON $$1 . program_body END ID  (2)
	$$2 : .  (4)
	opt_decl_list : .  (6)

	ID  reduce 6
	BEG  reduce 6
	VAR  reduce 4

	program_body  goto 5
	opt_decl_list  goto 6
	$$2  goto 7


state 5
	program : ID MK_SEMICOLON $$1 program_body . END ID  (2)

	END  shift 8
	.  error


state 6
	program_body : opt_decl_list . opt_func_decl_list compound_stmt  (3)
	opt_func_decl_list : .  (24)

	ID  shift 9
	BEG  reduce 24

	opt_func_decl_list  goto 10
	func_decl_list  goto 11
	func_decl  goto 12


state 7
	opt_decl_list : $$2 . decl_list  (5)

	VAR  shift 13
	.  error

	decl_list  goto 14
	decl  goto 15


state 8
	program : ID MK_SEMICOLON $$1 program_body END . ID  (2)

	ID  shift 16
	.  error


state 9
	func_decl : ID . MK_LPAREN $$3 opt_param_list $$4 MK_RPAREN opt_type MK_SEMICOLON $$5 compound_stmt END ID  (30)

	MK_LPAREN  shift 17
	.  error


state 10
	program_body : opt_decl_list opt_func_decl_list . compound_stmt  (3)

	BEG  shift 18
	.  error

	compound_stmt  goto 19


state 11
	opt_func_decl_list : func_decl_list .  (23)
	func_decl_list : func_decl_list . func_decl  (25)

	ID  shift 9
	BEG  reduce 23

	func_decl  goto 20


state 12
	func_decl_list : func_decl .  (26)

	.  reduce 26


state 13
	decl : VAR . id_list MK_COLON scalar_type MK_SEMICOLON  (9)
	decl : VAR . id_list MK_COLON array_type MK_SEMICOLON  (10)
	decl : VAR . id_list MK_COLON literal_const MK_SEMICOLON  (11)

	ID  shift 21
	.  error

	id_list  goto 22


state 14
	opt_decl_list : $$2 decl_list .  (5)
	decl_list : decl_list . decl  (7)

	VAR  shift 13
	ID  reduce 5
	BEG  reduce 5
	END  reduce 5
	FOR  reduce 5
	IF  reduce 5
	PRINT  reduce 5
	READ  reduce 5
	RETURN  reduce 5
	WHILE  reduce 5

	decl  goto 23


state 15
	decl_list : decl .  (8)

	.  reduce 8


state 16
	program : ID MK_SEMICOLON $$1 program_body END ID .  (2)

	.  reduce 2


state 17
	func_decl : ID MK_LPAREN . $$3 opt_param_list $$4 MK_RPAREN opt_type MK_SEMICOLON $$5 compound_stmt END ID  (30)
	$$3 : .  (27)

	.  reduce 27

	$$3  goto 24


state 18
	compound_stmt : BEG . $$10 opt_decl_list opt_stmt_list END  (59)
	$$10 : .  (58)

	.  reduce 58

	$$10  goto 25


state 19
	program_body : opt_decl_list opt_func_decl_list compound_stmt .  (3)

	.  reduce 3


state 20
	func_decl_list : func_decl_list func_decl .  (25)

	.  reduce 25


state 21
	id_list : ID .  (38)

	.  reduce 38


state 22
	decl : VAR id_list . MK_COLON scalar_type MK_SEMICOLON  (9)
	decl : VAR id_list . MK_COLON array_type MK_SEMICOLON  (10)
	decl : VAR id_list . MK_COLON literal_const MK_SEMICOLON  (11)
	id_list : id_list . MK_COMMA ID  (37)

	MK_COMMA  shift 26
	MK_COLON  shift 27
	.  error


state 23
	decl_list : decl_list decl .  (7)

	.  reduce 7


state 24
	func_decl : ID MK_LPAREN $$3 . opt_param_list $$4 MK_RPAREN opt_type MK_SEMICOLON $$5 compound_stmt END ID  (30)
	opt_param_list : .  (32)
	$$6 : .  (35)

	ID  reduce 35
	MK_RPAREN  reduce 32

	opt_param_list  goto 28
	param_list  goto 29
	param  goto 30
	$$6  goto 31


state 25
	compound_stmt : BEG $$10 . opt_decl_list opt_stmt_list END  (59)
	$$2 : .  (4)
	opt_decl_list : .  (6)

	ID  reduce 6
	BEG  reduce 6
	END  reduce 6
	FOR  reduce 6
	IF  reduce 6
	PRINT  reduce 6
	READ  reduce 6
	RETURN  reduce 6
	VAR  reduce 4
	WHILE  reduce 6

	opt_decl_list  goto 32
	$$2  goto 7


state 26
	id_list : id_list MK_COMMA . ID  (37)

	ID  shift 33
	.  error


state 27
	decl : VAR id_list MK_COLON . scalar_type MK_SEMICOLON  (9)
	decl : VAR id_list MK_COLON . array_type MK_SEMICOLON  (10)
	decl : VAR id_list MK_COLON . literal_const MK_SEMICOLON  (11)
	$$7 : .  (47)

	INT_CONST  shift 34
	FLOAT_CONST  shift 35
	BOOLEAN  shift 36
	FALSE  shift 37
	INTEGER  shift 38
	REAL  shift 39
	STRING  shift 40
	TRUE  shift 41
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 43
	STR_CONST  shift 44
	OP_SUB  shift 45
	ARRAY  reduce 47

	scalar_type  goto 46
	array_type  goto 47
	literal_const  goto 48
	int_const  goto 49
	$$7  goto 50


state 28
	func_decl : ID MK_LPAREN $$3 opt_param_list . $$4 MK_RPAREN opt_type MK_SEMICOLON $$5 compound_stmt END ID  (30)
	$$4 : .  (28)

	.  reduce 28

	$$4  goto 51


state 29
	opt_param_list : param_list .  (31)
	param_list : param_list . MK_SEMICOLON param  (33)

	MK_SEMICOLON  shift 52
	MK_RPAREN  reduce 31


state 30
	param_list : param .  (34)

	.  reduce 34


state 31
	param : $$6 . id_list MK_COLON type  (36)

	ID  shift 21
	.  error

	id_list  goto 53


state 32
	compound_stmt : BEG $$10 opt_decl_list . opt_stmt_list END  (59)
	opt_stmt_list : .  (61)

	ID  shift 54
	BEG  shift 18
	FOR  shift 55
	IF  shift 56
	PRINT  shift 57
	READ  shift 58
	RETURN  shift 59
	WHILE  shift 60
	END  reduce 61

	compound_stmt  goto 61
	stmt  goto 62
	simple_stmt  goto 63
	cond_stmt  goto 64
	while_stmt  goto 65
	for_stmt  goto 66
	return_stmt  goto 67
	proc_call_stmt  goto 68
	opt_stmt_list  goto 69
	stmt_list  goto 70
	var_ref  goto 71


state 33
	id_list : id_list MK_COMMA ID .  (37)

	.  reduce 37


state 34
	int_const : INT_CONST .  (12)

	.  reduce 12


state 35
	literal_const : FLOAT_CONST .  (16)

	.  reduce 16


state 36
	scalar_type : BOOLEAN .  (45)

	.  reduce 45


state 37
	literal_const : FALSE .  (22)

	.  reduce 22


state 38
	scalar_type : INTEGER .  (43)

	.  reduce 43


state 39
	scalar_type : REAL .  (44)

	.  reduce 44


state 40
	scalar_type : STRING .  (46)

	.  reduce 46


state 41
	literal_const : TRUE .  (21)

	.  reduce 21


state 42
	int_const : OCTAL_CONST .  (13)

	.  reduce 13


state 43
	literal_const : SCIENTIFIC .  (18)

	.  reduce 18


state 44
	literal_const : STR_CONST .  (20)

	.  reduce 20


state 45
	literal_const : OP_SUB . int_const  (15)
	literal_const : OP_SUB . FLOAT_CONST  (17)
	literal_const : OP_SUB . SCIENTIFIC  (19)

	INT_CONST  shift 34
	FLOAT_CONST  shift 72
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 73
	.  error

	int_const  goto 74


state 46
	decl : VAR id_list MK_COLON scalar_type . MK_SEMICOLON  (9)

	MK_SEMICOLON  shift 75
	.  error


state 47
	decl : VAR id_list MK_COLON array_type . MK_SEMICOLON  (10)

	MK_SEMICOLON  shift 76
	.  error


state 48
	decl : VAR id_list MK_COLON literal_const . MK_SEMICOLON  (11)

	MK_SEMICOLON  shift 77
	.  error


state 49
	literal_const : int_const .  (14)

	.  reduce 14


state 50
	array_type : $$7 . ARRAY int_const $$8 TO int_const OF $$9 type  (50)

	ARRAY  shift 78
	.  error


state 51
	func_decl : ID MK_LPAREN $$3 opt_param_list $$4 . MK_RPAREN opt_type MK_SEMICOLON $$5 compound_stmt END ID  (30)

	MK_RPAREN  shift 79
	.  error


state 52
	param_list : param_list MK_SEMICOLON . param  (33)
	$$6 : .  (35)

	.  reduce 35

	param  goto 80
	$$6  goto 31


state 53
	param : $$6 id_list . MK_COLON type  (36)
	id_list : id_list . MK_COMMA ID  (37)

	MK_COMMA  shift 26
	MK_COLON  shift 81
	.  error


state 54
	proc_call_stmt : ID . MK_LPAREN opt_boolean_expr_list MK_RPAREN MK_SEMICOLON  (67)
	var_ref : ID .  (107)

	MK_LPAREN  shift 82
	OP_ASSIGN  reduce 107
	MK_LB  reduce 107


state 55
	for_stmt : FOR . ID OP_ASSIGN int_const TO int_const DO opt_stmt_list END DO  (71)

	ID  shift 83
	.  error


state 56
	cond_stmt : IF . boolean_expr THEN opt_stmt_list ELSE opt_stmt_list END IF  (68)
	cond_stmt : IF . boolean_expr THEN opt_stmt_list END IF  (69)

	ID  shift 84
	INT_CONST  shift 34
	FLOAT_CONST  shift 35
	FALSE  shift 37
	TRUE  shift 41
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 43
	STR_CONST  shift 44
	OP_SUB  shift 85
	OP_NOT  shift 86
	MK_LPAREN  shift 87
	.  error

	literal_const  goto 88
	int_const  goto 49
	var_ref  goto 89
	boolean_expr  goto 90
	boolean_term  goto 91
	boolean_factor  goto 92
	relop_expr  goto 93
	expr  goto 94
	term  goto 95
	factor  goto 96


state 57
	simple_stmt : PRINT . boolean_expr MK_SEMICOLON  (65)

	ID  shift 84
	INT_CONST  shift 34
	FLOAT_CONST  shift 35
	FALSE  shift 37
	TRUE  shift 41
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 43
	STR_CONST  shift 44
	OP_SUB  shift 85
	OP_NOT  shift 86
	MK_LPAREN  shift 87
	.  error

	literal_const  goto 88
	int_const  goto 49
	var_ref  goto 89
	boolean_expr  goto 97
	boolean_term  goto 91
	boolean_factor  goto 92
	relop_expr  goto 93
	expr  goto 94
	term  goto 95
	factor  goto 96


state 58
	simple_stmt : READ . boolean_expr MK_SEMICOLON  (66)

	ID  shift 84
	INT_CONST  shift 34
	FLOAT_CONST  shift 35
	FALSE  shift 37
	TRUE  shift 41
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 43
	STR_CONST  shift 44
	OP_SUB  shift 85
	OP_NOT  shift 86
	MK_LPAREN  shift 87
	.  error

	literal_const  goto 88
	int_const  goto 49
	var_ref  goto 89
	boolean_expr  goto 98
	boolean_term  goto 91
	boolean_factor  goto 92
	relop_expr  goto 93
	expr  goto 94
	term  goto 95
	factor  goto 96


state 59
	return_stmt : RETURN . boolean_expr MK_SEMICOLON  (72)

	ID  shift 84
	INT_CONST  shift 34
	FLOAT_CONST  shift 35
	FALSE  shift 37
	TRUE  shift 41
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 43
	STR_CONST  shift 44
	OP_SUB  shift 85
	OP_NOT  shift 86
	MK_LPAREN  shift 87
	.  error

	literal_const  goto 88
	int_const  goto 49
	var_ref  goto 89
	boolean_expr  goto 99
	boolean_term  goto 91
	boolean_factor  goto 92
	relop_expr  goto 93
	expr  goto 94
	term  goto 95
	factor  goto 96


state 60
	while_stmt : WHILE . boolean_expr DO opt_stmt_list END DO  (70)

	ID  shift 84
	INT_CONST  shift 34
	FLOAT_CONST  shift 35
	FALSE  shift 37
	TRUE  shift 41
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 43
	STR_CONST  shift 44
	OP_SUB  shift 85
	OP_NOT  shift 86
	MK_LPAREN  shift 87
	.  error

	literal_const  goto 88
	int_const  goto 49
	var_ref  goto 89
	boolean_expr  goto 100
	boolean_term  goto 91
	boolean_factor  goto 92
	relop_expr  goto 93
	expr  goto 94
	term  goto 95
	factor  goto 96


state 61
	stmt : compound_stmt .  (51)

	.  reduce 51


state 62
	stmt_list : stmt .  (63)

	.  reduce 63


state 63
	stmt : simple_stmt .  (52)

	.  reduce 52


state 64
	stmt : cond_stmt .  (53)

	.  reduce 53


state 65
	stmt : while_stmt .  (54)

	.  reduce 54


state 66
	stmt : for_stmt .  (55)

	.  reduce 55


state 67
	stmt : return_stmt .  (56)

	.  reduce 56


state 68
	stmt : proc_call_stmt .  (57)

	.  reduce 57


state 69
	compound_stmt : BEG $$10 opt_decl_list opt_stmt_list . END  (59)

	END  shift 101
	.  error


state 70
	opt_stmt_list : stmt_list .  (60)
	stmt_list : stmt_list . stmt  (62)

	ID  shift 54
	BEG  shift 18
	FOR  shift 55
	IF  shift 56
	PRINT  shift 57
	READ  shift 58
	RETURN  shift 59
	WHILE  shift 60
	ELSE  reduce 60
	END  reduce 60

	compound_stmt  goto 61
	stmt  goto 102
	simple_stmt  goto 63
	cond_stmt  goto 64
	while_stmt  goto 65
	for_stmt  goto 66
	return_stmt  goto 67
	proc_call_stmt  goto 68
	var_ref  goto 71


state 71
	simple_stmt : var_ref . OP_ASSIGN boolean_expr MK_SEMICOLON  (64)
	var_ref : var_ref . dim  (108)

	OP_ASSIGN  shift 103
	MK_LB  shift 104
	.  error

	dim  goto 105


state 72
	literal_const : OP_SUB FLOAT_CONST .  (17)

	.  reduce 17


state 73
	literal_const : OP_SUB SCIENTIFIC .  (19)

	.  reduce 19


state 74
	literal_const : OP_SUB int_const .  (15)

	.  reduce 15


state 75
	decl : VAR id_list MK_COLON scalar_type MK_SEMICOLON .  (9)

	.  reduce 9


state 76
	decl : VAR id_list MK_COLON array_type MK_SEMICOLON .  (10)

	.  reduce 10


state 77
	decl : VAR id_list MK_COLON literal_const MK_SEMICOLON .  (11)

	.  reduce 11


state 78
	array_type : $$7 ARRAY . int_const $$8 TO int_const OF $$9 type  (50)

	INT_CONST  shift 34
	OCTAL_CONST  shift 42
	.  error

	int_const  goto 106


state 79
	func_decl : ID MK_LPAREN $$3 opt_param_list $$4 MK_RPAREN . opt_type MK_SEMICOLON $$5 compound_stmt END ID  (30)
	opt_type : .  (40)

	MK_COLON  shift 107
	MK_SEMICOLON  reduce 40

	opt_type  goto 108


state 80
	param_list : param_list MK_SEMICOLON param .  (33)

	.  reduce 33


state 81
	param : $$6 id_list MK_COLON . type  (36)
	$$7 : .  (47)

	BOOLEAN  shift 36
	INTEGER  shift 38
	REAL  shift 39
	STRING  shift 40
	ARRAY  reduce 47

	scalar_type  goto 109
	array_type  goto 110
	type  goto 111
	$$7  goto 50


state 82
	proc_call_stmt : ID MK_LPAREN . opt_boolean_expr_list MK_RPAREN MK_SEMICOLON  (67)
	opt_boolean_expr_list : .  (74)

	ID  shift 84
	INT_CONST  shift 34
	FLOAT_CONST  shift 35
	FALSE  shift 37
	TRUE  shift 41
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 43
	STR_CONST  shift 44
	OP_SUB  shift 85
	OP_NOT  shift 86
	MK_LPAREN  shift 87
	MK_RPAREN  reduce 74

	literal_const  goto 88
	int_const  goto 49
	var_ref  goto 89
	boolean_expr  goto 112
	opt_boolean_expr_list  goto 113
	boolean_expr_list  goto 114
	boolean_term  goto 91
	boolean_factor  goto 92
	relop_expr  goto 93
	expr  goto 94
	term  goto 95
	factor  goto 96


state 83
	for_stmt : FOR ID . OP_ASSIGN int_const TO int_const DO opt_stmt_list END DO  (71)

	OP_ASSIGN  shift 115
	.  error


state 84
	factor : ID . MK_LPAREN opt_boolean_expr_list MK_RPAREN  (104)
	var_ref : ID .  (107)

	MK_LPAREN  shift 116
	DO  reduce 107
	THEN  reduce 107
	OP_ADD  reduce 107
	OP_SUB  reduce 107
	OP_MUL  reduce 107
	OP_DIV  reduce 107
	OP_MOD  reduce 107
	OP_EQ  reduce 107
	OP_NE  reduce 107
	OP_GT  reduce 107
	OP_LT  reduce 107
	OP_GE  reduce 107
	OP_LE  reduce 107
	OP_AND  reduce 107
	OP_OR  reduce 107
	MK_COMMA  reduce 107
	MK_SEMICOLON  reduce 107
	MK_RPAREN  reduce 107
	MK_LB  reduce 107
	MK_RB  reduce 107


state 85
	literal_const : OP_SUB . int_const  (15)
	literal_const : OP_SUB . FLOAT_CONST  (17)
	literal_const : OP_SUB . SCIENTIFIC  (19)
	factor : OP_SUB . var_ref  (101)
	factor : OP_SUB . MK_LPAREN boolean_expr MK_RPAREN  (103)
	factor : OP_SUB . ID MK_LPAREN opt_boolean_expr_list MK_RPAREN  (105)

	ID  shift 117
	INT_CONST  shift 34
	FLOAT_CONST  shift 72
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 73
	MK_LPAREN  shift 118
	.  error

	int_const  goto 74
	var_ref  goto 119


state 86
	boolean_factor : OP_NOT . boolean_factor  (81)

	ID  shift 84
	INT_CONST  shift 34
	FLOAT_CONST  shift 35
	FALSE  shift 37
	TRUE  shift 41
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 43
	STR_CONST  shift 44
	OP_SUB  shift 85
	OP_NOT  shift 86
	MK_LPAREN  shift 87
	.  error

	literal_const  goto 88
	int_const  goto 49
	var_ref  goto 89
	boolean_factor  goto 120
	relop_expr  goto 93
	expr  goto 94
	term  goto 95
	factor  goto 96


state 87
	factor : MK_LPAREN . boolean_expr MK_RPAREN  (102)

	ID  shift 84
	INT_CONST  shift 34
	FLOAT_CONST  shift 35
	FALSE  shift 37
	TRUE  shift 41
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 43
	STR_CONST  shift 44
	OP_SUB  shift 85
	OP_NOT  shift 86
	MK_LPAREN  shift 87
	.  error

	literal_const  goto 88
	int_const  goto 49
	var_ref  goto 89
	boolean_expr  goto 121
	boolean_term  goto 91
	boolean_factor  goto 92
	relop_expr  goto 93
	expr  goto 94
	term  goto 95
	factor  goto 96


state 88
	factor : literal_const .  (106)

	.  reduce 106


state 89
	factor : var_ref .  (100)
	var_ref : var_ref . dim  (108)

	MK_LB  shift 104
	DO  reduce 100
	THEN  reduce 100
	OP_ADD  reduce 100
	OP_SUB  reduce 100
	OP_MUL  reduce 100
	OP_DIV  reduce 100
	OP_MOD  reduce 100
	OP_EQ  reduce 100
	OP_NE  reduce 100
	OP_GT  reduce 100
	OP_LT  reduce 100
	OP_GE  reduce 100
	OP_LE  reduce 100
	OP_AND  reduce 100
	OP_OR  reduce 100
	MK_COMMA  reduce 100
	MK_SEMICOLON  reduce 100
	MK_RPAREN  reduce 100
	MK_RB  reduce 100

	dim  goto 105


state 90
	cond_stmt : IF boolean_expr . THEN opt_stmt_list ELSE opt_stmt_list END IF  (68)
	cond_stmt : IF boolean_expr . THEN opt_stmt_list END IF  (69)
	boolean_expr : boolean_expr . OP_OR boolean_term  (77)

	THEN  shift 122
	OP_OR  shift 123
	.  error


state 91
	boolean_expr : boolean_term .  (78)
	boolean_term : boolean_term . OP_AND boolean_factor  (79)

	OP_AND  shift 124
	DO  reduce 78
	THEN  reduce 78
	OP_OR  reduce 78
	MK_COMMA  reduce 78
	MK_SEMICOLON  reduce 78
	MK_RPAREN  reduce 78
	MK_RB  reduce 78


state 92
	boolean_term : boolean_factor .  (80)

	.  reduce 80


state 93
	boolean_factor : relop_expr .  (82)

	.  reduce 82


state 94
	relop_expr : expr . rel_op expr  (83)
	relop_expr : expr .  (84)
	expr : expr . add_op term  (91)

	OP_ADD  shift 125
	OP_SUB  shift 126
	OP_EQ  shift 127
	OP_NE  shift 128
	OP_GT  shift 129
	OP_LT  shift 130
	OP_GE  shift 131
	OP_LE  shift 132
	DO  reduce 84
	THEN  reduce 84
	OP_AND  reduce 84
	OP_OR  reduce 84
	MK_COMMA  reduce 84
	MK_SEMICOLON  reduce 84
	MK_RPAREN  reduce 84
	MK_RB  reduce 84

	rel_op  goto 133
	add_op  goto 134


state 95
	expr : term .  (92)
	term : term . mul_op factor  (95)

	OP_MUL  shift 135
	OP_DIV  shift 136
	OP_MOD  shift 137
	DO  reduce 92
	THEN  reduce 92
	OP_ADD  reduce 92
	OP_SUB  reduce 92
	OP_EQ  reduce 92
	OP_NE  reduce 92
	OP_GT  reduce 92
	OP_LT  reduce 92
	OP_GE  reduce 92
	OP_LE  reduce 92
	OP_AND  reduce 92
	OP_OR  reduce 92
	MK_COMMA  reduce 92
	MK_SEMICOLON  reduce 92
	MK_RPAREN  reduce 92
	MK_RB  reduce 92

	mul_op  goto 138


state 96
	term : factor .  (96)

	.  reduce 96


state 97
	simple_stmt : PRINT boolean_expr . MK_SEMICOLON  (65)
	boolean_expr : boolean_expr . OP_OR boolean_term  (77)

	OP_OR  shift 123
	MK_SEMICOLON  shift 139
	.  error


state 98
	simple_stmt : READ boolean_expr . MK_SEMICOLON  (66)
	boolean_expr : boolean_expr . OP_OR boolean_term  (77)

	OP_OR  shift 123
	MK_SEMICOLON  shift 140
	.  error


state 99
	return_stmt : RETURN boolean_expr . MK_SEMICOLON  (72)
	boolean_expr : boolean_expr . OP_OR boolean_term  (77)

	OP_OR  shift 123
	MK_SEMICOLON  shift 141
	.  error


state 100
	while_stmt : WHILE boolean_expr . DO opt_stmt_list END DO  (70)
	boolean_expr : boolean_expr . OP_OR boolean_term  (77)

	DO  shift 142
	OP_OR  shift 123
	.  error


state 101
	compound_stmt : BEG $$10 opt_decl_list opt_stmt_list END .  (59)

	.  reduce 59


state 102
	stmt_list : stmt_list stmt .  (62)

	.  reduce 62


state 103
	simple_stmt : var_ref OP_ASSIGN . boolean_expr MK_SEMICOLON  (64)

	ID  shift 84
	INT_CONST  shift 34
	FLOAT_CONST  shift 35
	FALSE  shift 37
	TRUE  shift 41
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 43
	STR_CONST  shift 44
	OP_SUB  shift 85
	OP_NOT  shift 86
	MK_LPAREN  shift 87
	.  error

	literal_const  goto 88
	int_const  goto 49
	var_ref  goto 89
	boolean_expr  goto 143
	boolean_term  goto 91
	boolean_factor  goto 92
	relop_expr  goto 93
	expr  goto 94
	term  goto 95
	factor  goto 96


state 104
	dim : MK_LB . boolean_expr MK_RB  (109)

	ID  shift 84
	INT_CONST  shift 34
	FLOAT_CONST  shift 35
	FALSE  shift 37
	TRUE  shift 41
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 43
	STR_CONST  shift 44
	OP_SUB  shift 85
	OP_NOT  shift 86
	MK_LPAREN  shift 87
	.  error

	literal_const  goto 88
	int_const  goto 49
	var_ref  goto 89
	boolean_expr  goto 144
	boolean_term  goto 91
	boolean_factor  goto 92
	relop_expr  goto 93
	expr  goto 94
	term  goto 95
	factor  goto 96


state 105
	var_ref : var_ref dim .  (108)

	.  reduce 108


state 106
	array_type : $$7 ARRAY int_const . $$8 TO int_const OF $$9 type  (50)
	$$8 : .  (48)

	.  reduce 48

	$$8  goto 145


state 107
	opt_type : MK_COLON . type  (39)
	$$7 : .  (47)

	BOOLEAN  shift 36
	INTEGER  shift 38
	REAL  shift 39
	STRING  shift 40
	ARRAY  reduce 47

	scalar_type  goto 109
	array_type  goto 110
	type  goto 146
	$$7  goto 50


state 108
	func_decl : ID MK_LPAREN $$3 opt_param_list $$4 MK_RPAREN opt_type . MK_SEMICOLON $$5 compound_stmt END ID  (30)

	MK_SEMICOLON  shift 147
	.  error


state 109
	type : scalar_type .  (41)

	.  reduce 41


state 110
	type : array_type .  (42)

	.  reduce 42


state 111
	param : $$6 id_list MK_COLON type .  (36)

	.  reduce 36


state 112
	boolean_expr_list : boolean_expr .  (76)
	boolean_expr : boolean_expr . OP_OR boolean_term  (77)

	OP_OR  shift 123
	MK_COMMA  reduce 76
	MK_RPAREN  reduce 76


state 113
	proc_call_stmt : ID MK_LPAREN opt_boolean_expr_list . MK_RPAREN MK_SEMICOLON  (67)

	MK_RPAREN  shift 148
	.  error


state 114
	opt_boolean_expr_list : boolean_expr_list .  (73)
	boolean_expr_list : boolean_expr_list . MK_COMMA boolean_expr  (75)

	MK_COMMA  shift 149
	MK_RPAREN  reduce 73


state 115
	for_stmt : FOR ID OP_ASSIGN . int_const TO int_const DO opt_stmt_list END DO  (71)

	INT_CONST  shift 34
	OCTAL_CONST  shift 42
	.  error

	int_const  goto 150


state 116
	factor : ID MK_LPAREN . opt_boolean_expr_list MK_RPAREN  (104)
	opt_boolean_expr_list : .  (74)

	ID  shift 84
	INT_CONST  shift 34
	FLOAT_CONST  shift 35
	FALSE  shift 37
	TRUE  shift 41
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 43
	STR_CONST  shift 44
	OP_SUB  shift 85
	OP_NOT  shift 86
	MK_LPAREN  shift 87
	MK_RPAREN  reduce 74

	literal_const  goto 88
	int_const  goto 49
	var_ref  goto 89
	boolean_expr  goto 112
	opt_boolean_expr_list  goto 151
	boolean_expr_list  goto 114
	boolean_term  goto 91
	boolean_factor  goto 92
	relop_expr  goto 93
	expr  goto 94
	term  goto 95
	factor  goto 96


state 117
	factor : OP_SUB ID . MK_LPAREN opt_boolean_expr_list MK_RPAREN  (105)
	var_ref : ID .  (107)

	MK_LPAREN  shift 152
	DO  reduce 107
	THEN  reduce 107
	OP_ADD  reduce 107
	OP_SUB  reduce 107
	OP_MUL  reduce 107
	OP_DIV  reduce 107
	OP_MOD  reduce 107
	OP_EQ  reduce 107
	OP_NE  reduce 107
	OP_GT  reduce 107
	OP_LT  reduce 107
	OP_GE  reduce 107
	OP_LE  reduce 107
	OP_AND  reduce 107
	OP_OR  reduce 107
	MK_COMMA  reduce 107
	MK_SEMICOLON  reduce 107
	MK_RPAREN  reduce 107
	MK_LB  reduce 107
	MK_RB  reduce 107


state 118
	factor : OP_SUB MK_LPAREN . boolean_expr MK_RPAREN  (103)

	ID  shift 84
	INT_CONST  shift 34
	FLOAT_CONST  shift 35
	FALSE  shift 37
	TRUE  shift 41
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 43
	STR_CONST  shift 44
	OP_SUB  shift 85
	OP_NOT  shift 86
	MK_LPAREN  shift 87
	.  error

	literal_const  goto 88
	int_const  goto 49
	var_ref  goto 89
	boolean_expr  goto 153
	boolean_term  goto 91
	boolean_factor  goto 92
	relop_expr  goto 93
	expr  goto 94
	term  goto 95
	factor  goto 96


state 119
	factor : OP_SUB var_ref .  (101)
	var_ref : var_ref . dim  (108)

	MK_LB  shift 104
	DO  reduce 101
	THEN  reduce 101
	OP_ADD  reduce 101
	OP_SUB  reduce 101
	OP_MUL  reduce 101
	OP_DIV  reduce 101
	OP_MOD  reduce 101
	OP_EQ  reduce 101
	OP_NE  reduce 101
	OP_GT  reduce 101
	OP_LT  reduce 101
	OP_GE  reduce 101
	OP_LE  reduce 101
	OP_AND  reduce 101
	OP_OR  reduce 101
	MK_COMMA  reduce 101
	MK_SEMICOLON  reduce 101
	MK_RPAREN  reduce 101
	MK_RB  reduce 101

	dim  goto 105


state 120
	boolean_factor : OP_NOT boolean_factor .  (81)

	.  reduce 81


state 121
	boolean_expr : boolean_expr . OP_OR boolean_term  (77)
	factor : MK_LPAREN boolean_expr . MK_RPAREN  (102)

	OP_OR  shift 123
	MK_RPAREN  shift 154
	.  error


state 122
	cond_stmt : IF boolean_expr THEN . opt_stmt_list ELSE opt_stmt_list END IF  (68)
	cond_stmt : IF boolean_expr THEN . opt_stmt_list END IF  (69)
	opt_stmt_list : .  (61)

	ID  shift 54
	BEG  shift 18
	FOR  shift 55
	IF  shift 56
	PRINT  shift 57
	READ  shift 58
	RETURN  shift 59
	WHILE  shift 60
	ELSE  reduce 61
	END  reduce 61

	compound_stmt  goto 61
	stmt  goto 62
	simple_stmt  goto 63
	cond_stmt  goto 64
	while_stmt  goto 65
	for_stmt  goto 66
	return_stmt  goto 67
	proc_call_stmt  goto 68
	opt_stmt_list  goto 155
	stmt_list  goto 70
	var_ref  goto 71


state 123
	boolean_expr : boolean_expr OP_OR . boolean_term  (77)

	ID  shift 84
	INT_CONST  shift 34
	FLOAT_CONST  shift 35
	FALSE  shift 37
	TRUE  shift 41
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 43
	STR_CONST  shift 44
	OP_SUB  shift 85
	OP_NOT  shift 86
	MK_LPAREN  shift 87
	.  error

	literal_const  goto 88
	int_const  goto 49
	var_ref  goto 89
	boolean_term  goto 156
	boolean_factor  goto 92
	relop_expr  goto 93
	expr  goto 94
	term  goto 95
	factor  goto 96


state 124
	boolean_term : boolean_term OP_AND . boolean_factor  (79)

	ID  shift 84
	INT_CONST  shift 34
	FLOAT_CONST  shift 35
	FALSE  shift 37
	TRUE  shift 41
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 43
	STR_CONST  shift 44
	OP_SUB  shift 85
	OP_NOT  shift 86
	MK_LPAREN  shift 87
	.  error

	literal_const  goto 88
	int_const  goto 49
	var_ref  goto 89
	boolean_factor  goto 157
	relop_expr  goto 93
	expr  goto 94
	term  goto 95
	factor  goto 96


state 125
	add_op : OP_ADD .  (93)

	.  reduce 93


state 126
	add_op : OP_SUB .  (94)

	.  reduce 94


state 127
	rel_op : OP_EQ .  (87)

	.  reduce 87


state 128
	rel_op : OP_NE .  (90)

	.  reduce 90


state 129
	rel_op : OP_GT .  (89)

	.  reduce 89


state 130
	rel_op : OP_LT .  (85)

	.  reduce 85


state 131
	rel_op : OP_GE .  (88)

	.  reduce 88


state 132
	rel_op : OP_LE .  (86)

	.  reduce 86


state 133
	relop_expr : expr rel_op . expr  (83)

	ID  shift 84
	INT_CONST  shift 34
	FLOAT_CONST  shift 35
	FALSE  shift 37
	TRUE  shift 41
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 43
	STR_CONST  shift 44
	OP_SUB  shift 85
	MK_LPAREN  shift 87
	.  error

	literal_const  goto 88
	int_const  goto 49
	var_ref  goto 89
	expr  goto 158
	term  goto 95
	factor  goto 96


state 134
	expr : expr add_op . term  (91)

	ID  shift 84
	INT_CONST  shift 34
	FLOAT_CONST  shift 35
	FALSE  shift 37
	TRUE  shift 41
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 43
	STR_CONST  shift 44
	OP_SUB  shift 85
	MK_LPAREN  shift 87
	.  error

	literal_const  goto 88
	int_const  goto 49
	var_ref  goto 89
	term  goto 159
	factor  goto 96


state 135
	mul_op : OP_MUL .  (97)

	.  reduce 97


state 136
	mul_op : OP_DIV .  (98)

	.  reduce 98


state 137
	mul_op : OP_MOD .  (99)

	.  reduce 99


state 138
	term : term mul_op . factor  (95)

	ID  shift 84
	INT_CONST  shift 34
	FLOAT_CONST  shift 35
	FALSE  shift 37
	TRUE  shift 41
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 43
	STR_CONST  shift 44
	OP_SUB  shift 85
	MK_LPAREN  shift 87
	.  error

	literal_const  goto 88
	int_const  goto 49
	var_ref  goto 89
	factor  goto 160


state 139
	simple_stmt : PRINT boolean_expr MK_SEMICOLON .  (65)

	.  reduce 65


state 140
	simple_stmt : READ boolean_expr MK_SEMICOLON .  (66)

	.  reduce 66


state 141
	return_stmt : RETURN boolean_expr MK_SEMICOLON .  (72)

	.  reduce 72


state 142
	while_stmt : WHILE boolean_expr DO . opt_stmt_list END DO  (70)
	opt_stmt_list : .  (61)

	ID  shift 54
	BEG  shift 18
	FOR  shift 55
	IF  shift 56
	PRINT  shift 57
	READ  shift 58
	RETURN  shift 59
	WHILE  shift 60
	END  reduce 61

	compound_stmt  goto 61
	stmt  goto 62
	simple_stmt  goto 63
	cond_stmt  goto 64
	while_stmt  goto 65
	for_stmt  goto 66
	return_stmt  goto 67
	proc_call_stmt  goto 68
	opt_stmt_list  goto 161
	stmt_list  goto 70
	var_ref  goto 71


state 143
	simple_stmt : var_ref OP_ASSIGN boolean_expr . MK_SEMICOLON  (64)
	boolean_expr : boolean_expr . OP_OR boolean_term  (77)

	OP_OR  shift 123
	MK_SEMICOLON  shift 162
	.  error


state 144
	boolean_expr : boolean_expr . OP_OR boolean_term  (77)
	dim : MK_LB boolean_expr . MK_RB  (109)

	OP_OR  shift 123
	MK_RB  shift 163
	.  error


state 145
	array_type : $$7 ARRAY int_const $$8 . TO int_const OF $$9 type  (50)

	TO  shift 164
	.  error


state 146
	opt_type : MK_COLON type .  (39)

	.  reduce 39


state 147
	func_decl : ID MK_LPAREN $$3 opt_param_list $$4 MK_RPAREN opt_type MK_SEMICOLON . $$5 compound_stmt END ID  (30)
	$$5 : .  (29)

	.  reduce 29

	$$5  goto 165


state 148
	proc_call_stmt : ID MK_LPAREN opt_boolean_expr_list MK_RPAREN . MK_SEMICOLON  (67)

	MK_SEMICOLON  shift 166
	.  error


state 149
	boolean_expr_list : boolean_expr_list MK_COMMA . boolean_expr  (75)

	ID  shift 84
	INT_CONST  shift 34
	FLOAT_CONST  shift 35
	FALSE  shift 37
	TRUE  shift 41
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 43
	STR_CONST  shift 44
	OP_SUB  shift 85
	OP_NOT  shift 86
	MK_LPAREN  shift 87
	.  error

	literal_const  goto 88
	int_const  goto 49
	var_ref  goto 89
	boolean_expr  goto 167
	boolean_term  goto 91
	boolean_factor  goto 92
	relop_expr  goto 93
	expr  goto 94
	term  goto 95
	factor  goto 96


state 150
	for_stmt : FOR ID OP_ASSIGN int_const . TO int_const DO opt_stmt_list END DO  (71)

	TO  shift 168
	.  error


state 151
	factor : ID MK_LPAREN opt_boolean_expr_list . MK_RPAREN  (104)

	MK_RPAREN  shift 169
	.  error


state 152
	factor : OP_SUB ID MK_LPAREN . opt_boolean_expr_list MK_RPAREN  (105)
	opt_boolean_expr_list : .  (74)

	ID  shift 84
	INT_CONST  shift 34
	FLOAT_CONST  shift 35
	FALSE  shift 37
	TRUE  shift 41
	OCTAL_CONST  shift 42
	SCIENTIFIC  shift 43
	STR_CONST  shift 44
	OP_SUB  shift 85
	OP_NOT  shift 86
	MK_LPAREN  shift 87
	MK_RPAREN  reduce 74

	literal_const  goto 88
	int_const  goto 49
	var_ref  goto 89
	boolean_expr  goto 112
	opt_boolean_expr_list  goto 170
	boolean_expr_list  goto 114
	boolean_term  goto 91
	boolean_factor  goto 92
	relop_expr  goto 93
	expr  goto 94
	term  goto 95
	factor  goto 96


state 153
	boolean_expr : boolean_expr . OP_OR boolean_term  (77)
	factor : OP_SUB MK_LPAREN boolean_expr . MK_RPAREN  (103)

	OP_OR  shift 123
	MK_RPAREN  shift 171
	.  error


state 154
	factor : MK_LPAREN boolean_expr MK_RPAREN .  (102)

	.  reduce 102


state 155
	cond_stmt : IF boolean_expr THEN opt_stmt_list . ELSE opt_stmt_list END IF  (68)
	cond_stmt : IF boolean_expr THEN opt_stmt_list . END IF  (69)

	ELSE  shift 172
	END  shift 173
	.  error


state 156
	boolean_expr : boolean_expr OP_OR boolean_term .  (77)
	boolean_term : boolean_term . OP_AND boolean_factor  (79)

	OP_AND  shift 124
	DO  reduce 77
	THEN  reduce 77
	OP_OR  reduce 77
	MK_COMMA  reduce 77
	MK_SEMICOLON  reduce 77
	MK_RPAREN  reduce 77
	MK_RB  reduce 77


state 157
	boolean_term : boolean_term OP_AND boolean_factor .  (79)

	.  reduce 79


state 158
	relop_expr : expr rel_op expr .  (83)
	expr : expr . add_op term  (91)

	OP_ADD  shift 125
	OP_SUB  shift 126
	DO  reduce 83
	THEN  reduce 83
	OP_AND  reduce 83
	OP_OR  reduce 83
	MK_COMMA  reduce 83
	MK_SEMICOLON  reduce 83
	MK_RPAREN  reduce 83
	MK_RB  reduce 83

	add_op  goto 134


state 159
	expr : expr add_op term .  (91)
	term : term . mul_op factor  (95)

	OP_MUL  shift 135
	OP_DIV  shift 136
	OP_MOD  shift 137
	DO  reduce 91
	THEN  reduce 91
	OP_ADD  reduce 91
	OP_SUB  reduce 91
	OP_EQ  reduce 91
	OP_NE  reduce 91
	OP_GT  reduce 91
	OP_LT  reduce 91
	OP_GE  reduce 91
	OP_LE  reduce 91
	OP_AND  reduce 91
	OP_OR  reduce 91
	MK_COMMA  reduce 91
	MK_SEMICOLON  reduce 91
	MK_RPAREN  reduce 91
	MK_RB  reduce 91

	mul_op  goto 138


state 160
	term : term mul_op factor .  (95)

	.  reduce 95


state 161
	while_stmt : WHILE boolean_expr DO opt_stmt_list . END DO  (70)

	END  shift 174
	.  error


state 162
	simple_stmt : var_ref OP_ASSIGN boolean_expr MK_SEMICOLON .  (64)

	.  reduce 64


state 163
	dim : MK_LB boolean_expr MK_RB .  (109)

	.  reduce 109


state 164
	array_type : $$7 ARRAY int_const $$8 TO . int_const OF $$9 type  (50)

	INT_CONST  shift 34
	OCTAL_CONST  shift 42
	.  error

	int_const  goto 175


state 165
	func_decl : ID MK_LPAREN $$3 opt_param_list $$4 MK_RPAREN opt_type MK_SEMICOLON $$5 . compound_stmt END ID  (30)

	BEG  shift 18
	.  error

	compound_stmt  goto 176


state 166
	proc_call_stmt : ID MK_LPAREN opt_boolean_expr_list MK_RPAREN MK_SEMICOLON .  (67)

	.  reduce 67


state 167
	boolean_expr_list : boolean_expr_list MK_COMMA boolean_expr .  (75)
	boolean_expr : boolean_expr . OP_OR boolean_term  (77)

	OP_OR  shift 123
	MK_COMMA  reduce 75
	MK_RPAREN  reduce 75


state 168
	for_stmt : FOR ID OP_ASSIGN int_const TO . int_const DO opt_stmt_list END DO  (71)

	INT_CONST  shift 34
	OCTAL_CONST  shift 42
	.  error

	int_const  goto 177


state 169
	factor : ID MK_LPAREN opt_boolean_expr_list MK_RPAREN .  (104)

	.  reduce 104


state 170
	factor : OP_SUB ID MK_LPAREN opt_boolean_expr_list . MK_RPAREN  (105)

	MK_RPAREN  shift 178
	.  error


state 171
	factor : OP_SUB MK_LPAREN boolean_expr MK_RPAREN .  (103)

	.  reduce 103


state 172
	cond_stmt : IF boolean_expr THEN opt_stmt_list ELSE . opt_stmt_list END IF  (68)
	opt_stmt_list : .  (61)

	ID  shift 54
	BEG  shift 18
	FOR  shift 55
	IF  shift 56
	PRINT  shift 57
	READ  shift 58
	RETURN  shift 59
	WHILE  shift 60
	END  reduce 61

	compound_stmt  goto 61
	stmt  goto 62
	simple_stmt  goto 63
	cond_stmt  goto 64
	while_stmt  goto 65
	for_stmt  goto 66
	return_stmt  goto 67
	proc_call_stmt  goto 68
	opt_stmt_list  goto 179
	stmt_list  goto 70
	var_ref  goto 71


state 173
	cond_stmt : IF boolean_expr THEN opt_stmt_list END . IF  (69)

	IF  shift 180
	.  error


state 174
	while_stmt : WHILE boolean_expr DO opt_stmt_list END . DO  (70)

	DO  shift 181
	.  error


state 175
	array_type : $$7 ARRAY int_const $$8 TO int_const . OF $$9 type  (50)

	OF  shift 182
	.  error


state 176
	func_decl : ID MK_LPAREN $$3 opt_param_list $$4 MK_RPAREN opt_type MK_SEMICOLON $$5 compound_stmt . END ID  (30)

	END  shift 183
	.  error


state 177
	for_stmt : FOR ID OP_ASSIGN int_const TO int_const . DO opt_stmt_list END DO  (71)

	DO  shift 184
	.  error


state 178
	factor : OP_SUB ID MK_LPAREN opt_boolean_expr_list MK_RPAREN .  (105)

	.  reduce 105


state 179
	cond_stmt : IF boolean_expr THEN opt_stmt_list ELSE opt_stmt_list . END IF  (68)

	END  shift 185
	.  error


state 180
	cond_stmt : IF boolean_expr THEN opt_stmt_list END IF .  (69)

	.  reduce 69


state 181
	while_stmt : WHILE boolean_expr DO opt_stmt_list END DO .  (70)

	.  reduce 70


state 182
	array_type : $$7 ARRAY int_const $$8 TO int_const OF . $$9 type  (50)
	$$9 : .  (49)

	.  reduce 49

	$$9  goto 186


state 183
	func_decl : ID MK_LPAREN $$3 opt_param_list $$4 MK_RPAREN opt_type MK_SEMICOLON $$5 compound_stmt END . ID  (30)

	ID  shift 187
	.  error


state 184
	for_stmt : FOR ID OP_ASSIGN int_const TO int_const DO . opt_stmt_list END DO  (71)
	opt_stmt_list : .  (61)

	ID  shift 54
	BEG  shift 18
	FOR  shift 55
	IF  shift 56
	PRINT  shift 57
	READ  shift 58
	RETURN  shift 59
	WHILE  shift 60
	END  reduce 61

	compound_stmt  goto 61
	stmt  goto 62
	simple_stmt  goto 63
	cond_stmt  goto 64
	while_stmt  goto 65
	for_stmt  goto 66
	return_stmt  goto 67
	proc_call_stmt  goto 68
	opt_stmt_list  goto 188
	stmt_list  goto 70
	var_ref  goto 71


state 185
	cond_stmt : IF boolean_expr THEN opt_stmt_list ELSE opt_stmt_list END . IF  (68)

	IF  shift 189
	.  error


state 186
	array_type : $$7 ARRAY int_const $$8 TO int_const OF $$9 . type  (50)
	$$7 : .  (47)

	BOOLEAN  shift 36
	INTEGER  shift 38
	REAL  shift 39
	STRING  shift 40
	ARRAY  reduce 47

	scalar_type  goto 109
	array_type  goto 110
	type  goto 190
	$$7  goto 50


state 187
	func_decl : ID MK_LPAREN $$3 opt_param_list $$4 MK_RPAREN opt_type MK_SEMICOLON $$5 compound_stmt END ID .  (30)

	.  reduce 30


state 188
	for_stmt : FOR ID OP_ASSIGN int_const TO int_const DO opt_stmt_list . END DO  (71)

	END  shift 191
	.  error


state 189
	cond_stmt : IF boolean_expr THEN opt_stmt_list ELSE opt_stmt_list END IF .  (68)

	.  reduce 68


state 190
	array_type : $$7 ARRAY int_const $$8 TO int_const OF $$9 type .  (50)

	.  reduce 50


state 191
	for_stmt : FOR ID OP_ASSIGN int_const TO int_const DO opt_stmt_list END . DO  (71)

	DO  shift 192
	.  error


state 192
	for_stmt : FOR ID OP_ASSIGN int_const TO int_const DO opt_stmt_list END DO .  (71)

	.  reduce 71


52 terminals, 53 nonterminals
110 grammar rules, 193 states
